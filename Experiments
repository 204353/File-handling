import pickle
class Database:
    def __init__(self, chapter, topic, reflection = None, notes = None):
        self.chapter = chapter
        self.topic = topic
        self.reflection = reflection
        self.notes = notes
    def setreflection(self):
        while True:
            try:
                print("What is your level of understanding for chapter " + i.chapter + ": " + i.topic+"(1-5)")
                x = int(input())
                if x < 6 and x > 0:
                    self.reflection = x
                    break
                else:
                    print("You must enter a number between 1 and 5.")
            except ValueError:
                print("Enter a number between 1 to 5.")
    def setnotes(self):
        notes = input("Do you want to add any notes?(y/n)\n")
        if notes == "y":
            notes = input("Enter your notes:\n")
            self.notes = notes
    def getreflection(self):
        return self.reflection
    def getnotes(self):
        return self.notes
    def __repr__(self):
        return self.chapter + self.topic
database = []
with open("Newpractical.txt", "r") as whole_file:
    for line in whole_file:
        x = line.split(" : ")
        y = x[1].strip()
        database.append(Database(x[0], y))

for i in database:
    with open("practical.pickle","wb") as ickle:
        pickle.dump(i, ickle)
import tkinter as tk
root = tk.Tk()
root.grid_columnconfigure((0,1), weight=1)
mylabel = tk.Label(root)
entry = tk.Entry(root)
i = 0
def lol():
    global i
    x = entry.get()
    if len(x) > 0:
        try:
            x = int(x)
            if i < len(database):
                startbutton['text'] = ''
                if x > 5 or x< 1:
                    newlabel['text'] = "Your confidence must be between 1 and 5"
                else:
                    database[i].reflection = x
                    database[i].notes = theentry.get()
                    mylabel['text'] = "How confident are you (1-5) on chapter " + database[i].chapter + ": " + database[i].topic +"?:"
                    newlabel['text'] = ""
                    i += 1
            else:
                newlabel['text'] = "You have nothing else to do!"
        except ValueError:
            newlabel['text'] = "Your confidence must be between 1 and 5"
    else:
        newlabel['text'] = "Please enter a number between 1 and 5"
def start():
    global i 
    mylabel.grid(row=3, column=0)
    entry.grid(row=3, column=1, sticky='ew')
    thelabel.grid(row=4, column=0)
    theentry.grid(row=4, column=1, sticky="ew")
    newlabel.grid(row=5)
    button.grid(row=6, sticky="nsew", columnspan =2)
    view.grid(row=7, sticky="nsew", columnspan =2)
    quit.grid(row=8, sticky="nsew", columnspan =2)
    mylabel['text'] = "How confident are you (1-5) on chapter" + database[i].chapter + ": " + database[i].topic +"?:"
    thelabel['text'] = "Enter any notes you have here:"
    i += 1
    startbutton.grid_remove()
def view():
    newwindow = tk.Toplevel(root)
    newwindow.grid_columnconfigure((0,1), weight=1)
    lol = tk.Label(newwindow, text='lol')
    lol.grid(row = 1, column =0)
newlabel = tk.Label(root)
button = tk.Button(root, text="Next", command=lol, width=30)
quit = tk.Button(root, text="Quit", command=quit, width=30)
thelabel = tk.Label(root)
theentry = tk.Entry(root)
view = tk.Button(root, text="View", command=view, width=30)
startbutton = tk.Button(root, text='Start', command=start, bg="#00ff00")
startbutton.grid(row=2, sticky="nsew", columnspan = 2)
root.mainloop()
